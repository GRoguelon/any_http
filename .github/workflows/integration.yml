name: Continuous Integration

on:
  push:
    branches:
      - "*"
    paths-ignore:
      - "*.md"
    tags-ignore:
      - "*"
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  ERLANG_VERSION: 22.3.4.26
  ELIXIR_VERSION: 1.12.3

jobs:
  format:
    name: Format
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.ERLANG_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      - name: Setup the dependencies
        run: mix deps.get

      - name: Check the formatting
        run: mix format --check-formatted

  credo:
    name: Credo
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: ${{ env.ERLANG_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      - name: Restore dev cache
        id: cache_restore
        uses: actions/cache/restore@v3
        with:
          key: |
            dev-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            dev-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          path: |
            deps/
            _build/dev

      - name: Setup the dependencies
        if: steps.cache_restore.outputs.cache-hit != 'true'
        run: mix do local.hex --if-missing --force, local.rebar --if-missing --force, deps.get, deps.compile, compile --force

      - name: Save dev cache
        uses: actions/cache/save@v3
        if: steps.cache_restore.outputs.cache-hit != 'true'
        with:
          key: |
            dev-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          path: |
            deps/
            _build/dev

      - name: Run credo
        run: mix credo --format sarif

  dialyxir:
    name: Dialyxir
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: ${{ env.ERLANG_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      - name: Restore PLT cache
        id: cache_restore
        uses: actions/cache/restore@v3
        with:
          key: |
            plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          path: |
            priv/plts
            deps/
            _build/dev

      - name: Create PLTs
        if: steps.cache_restore.outputs.cache-hit != 'true'
        run: mix do deps.get, dialyzer --plt

      - name: Save PLT cache
        uses: actions/cache/save@v3
        if: steps.cache_restore.outputs.cache-hit != 'true'
        with:
          key: |
            plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          path: |
            priv/plts
            deps/
            _build/dev

      - name: Run dialyzer
        run: mix dialyzer --format github

  test:
    name: Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    strategy:
      matrix:
        erlang: [22.3.4.26, 23.3.4.18, 24.3.4.12, 25.3.2.1, 26.0]
        elixir: [1.12.3, 1.13.4, 1.14.5]
        exclude:
          - erlang: 22.3.4.26
            elixir: 1.14.5
          - erlang: 26.0
            elixir: 1.13.4
          - erlang: 25.3.2.1
            elixir: 1.12.3
          - erlang: 26.0
            elixir: 1.12.3

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: ${{ matrix.erlang }}
          elixir-version: ${{ matrix.elixir }}

      - name: Restore test cache
        id: cache_restore
        uses: actions/cache/restore@v3
        with:
          key: |
            test-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            test-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          path: |
            deps/
            _build/test

      - name: Setup the dependencies
        if: steps.cache_restore.outputs.cache-hit != 'true'
        env:
          MIX_ENV: test
        run: mix do local.hex --if-missing --force, local.rebar --if-missing --force, deps.get, deps.compile, compile --force

      - name: Save test cache
        uses: actions/cache/save@v3
        if: steps.cache_restore.outputs.cache-hit != 'true'
        with:
          key: |
            test-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          path: |
            deps/
            _build/test

      - name: Run test
        run: mix test

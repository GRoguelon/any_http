name: Continuous Integration

on:
  push:
    branches:
      - "*"
    paths-ignore:
      - "*.md"
    tags-ignore:
      - "*"
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  ERLANG_VERSION: 22.3.4.26
  ELIXIR_VERSION: 1.12.3

jobs:
  format:
    name: Format
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Erlang and Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          version-type: "strict"
          version-file: ".tool-versions"
          install-hex: true
          install-rebar: true

      - name: Setup the dependencies
        run: mix deps.get

      - name: Check the formatting
        run: mix format --check-formatted

  credo:
    name: Credo
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Erlang and Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          version-type: "strict"
          version-file: ".tool-versions"
          install-hex: true
          install-rebar: true

      - name: Restore the cache
        id: cache_restore
        uses: actions/cache/restore@v3
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-dev-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-dev-
          path: |
            deps/
            _build/dev/

      - name: Setup the dependencies
        if: steps.cache_restore.outputs.cache-hit != 'true'
        run: mix do deps.get, deps.compile, compile --force

      - name: Save dev cache
        uses: actions/cache/save@v3
        if: steps.cache_restore.outputs.cache-hit != 'true'
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-dev-${{ hashFiles('mix.lock') }}
          path: |
            deps/
            _build/dev/

      - name: Run credo
        run: mix credo --format sarif

  dialyxir:
    name: Dialyxir
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Erlang and Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          version-type: "strict"
          version-file: ".tool-versions"
          install-hex: true
          install-rebar: true

      - name: Restore build
        uses: actions/cache/restore@v3
        id: cache_restore
        with:
          fail-on-cache-miss: true
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-plts-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-plts-
          path: |
            deps/
            _build/dev/

      - name: Create PLTs
        if: steps.cache_restore.outputs.cache-hit != 'true'
        run: mix do deps.get, dialyzer --plt

      - name: Save PLT cache
        uses: actions/cache/save@v3
        if: steps.cache_restore.outputs.cache-hit != 'true'
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-plts-${{ hashFiles('mix.lock') }}
          path: |
            deps/
            _build/dev/

      - name: Run dialyzer
        run: mix dialyzer --format github

  test:
    name: Test
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Erlang and Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          version-type: "strict"
          version-file: ".tool-versions"
          install-hex: true
          install-rebar: true

      - name: Restore the cache
        id: cache_restore
        uses: actions/cache/restore@v3
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-test-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-test-
          path: |
            deps/
            _build/test/

      - name: Setup the dependencies
        if: steps.cache_restore.outputs.cache-hit != 'true'
        env:
          MIX_ENV: test
        run: mix do deps.get, deps.compile, compile --force

      - name: Save test cache
        uses: actions/cache/save@v3
        if: steps.cache_restore.outputs.cache-hit != 'true'
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-erlang-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-test-${{ hashFiles('mix.lock') }}
          path: |
            deps/
            _build/test/

      - name: Run test
        run: mix test
